// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/rabbit/consume/consume_logout.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLogoutConsumer is a mock of LogoutConsumer interface.
type MockLogoutConsumer struct {
	ctrl     *gomock.Controller
	recorder *MockLogoutConsumerMockRecorder
}

// MockLogoutConsumerMockRecorder is the mock recorder for MockLogoutConsumer.
type MockLogoutConsumerMockRecorder struct {
	mock *MockLogoutConsumer
}

// NewMockLogoutConsumer creates a new mock instance.
func NewMockLogoutConsumer(ctrl *gomock.Controller) *MockLogoutConsumer {
	mock := &MockLogoutConsumer{ctrl: ctrl}
	mock.recorder = &MockLogoutConsumerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogoutConsumer) EXPECT() *MockLogoutConsumerMockRecorder {
	return m.recorder
}

// ConsumeLogout mocks base method.
func (m *MockLogoutConsumer) ConsumeLogout() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConsumeLogout")
	ret0, _ := ret[0].(error)
	return ret0
}

// ConsumeLogout indicates an expected call of ConsumeLogout.
func (mr *MockLogoutConsumerMockRecorder) ConsumeLogout() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConsumeLogout", reflect.TypeOf((*MockLogoutConsumer)(nil).ConsumeLogout))
}
