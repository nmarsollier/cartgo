basePath: /v1
definitions:
  cart.Article:
    properties:
      articleId:
        maxLength: 100
        minLength: 1
        type: string
      quantity:
        maximum: 100
        minimum: 1
        type: integer
      valid:
        type: boolean
      validated:
        type: boolean
    required:
    - articleId
    - quantity
    type: object
  cart.Cart:
    properties:
      _id:
        type: string
      articles:
        items:
          $ref: '#/definitions/cart.Article'
        type: array
      created:
        type: string
      enabled:
        type: boolean
      orderId:
        type: string
      updated:
        type: string
      userId:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - articles
    - userId
    type: object
  cart.OrderPlacedEvent:
    properties:
      cartId:
        example: CartId
        type: string
      orderId:
        example: OrderId
        type: string
      valid:
        example: true
        type: boolean
    type: object
  cart.ValidationEvent:
    properties:
      articleId:
        example: ArticleId
        type: string
      referenceId:
        example: UserId
        type: string
      valid:
        example: true
        type: boolean
    type: object
  consume.consumeArticleExistMessage:
    properties:
      correlation_id:
        example: "123123"
        type: string
      message:
        $ref: '#/definitions/cart.ValidationEvent'
    type: object
  consume.consumeOrderPlacedMessage:
    properties:
      correlation_id:
        example: "123123"
        type: string
      message:
        $ref: '#/definitions/cart.OrderPlacedEvent'
    type: object
  consume.logoutMessage:
    properties:
      correlation_id:
        example: "123123"
        type: string
      message:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbklEIjoiNjZiNjBlYzhlMGYzYzY4OTUzMzJlOWNmIiwidXNlcklEIjoiNjZhZmQ3ZWU4YTBhYjRjZjQ0YTQ3NDcyIn0.who7upBctOpmlVmTvOgH1qFKOHKXmuQCkEjMV3qeySg
        type: string
    type: object
  emit.ArticleValidationData:
    properties:
      articleId:
        example: ArticleId
        type: string
      referenceId:
        example: UserId
        type: string
    type: object
  emit.PlaceArticlesData:
    properties:
      id:
        example: ArticleId
        type: string
      quantity:
        example: 10
        type: integer
    type: object
  emit.PlacedData:
    properties:
      articles:
        items:
          $ref: '#/definitions/emit.PlaceArticlesData'
        type: array
      cartId:
        example: CartId
        type: string
      userId:
        example: UserId
        type: string
    type: object
  emit.SendPlacedMessage:
    type: object
  emit.SendValidationMessage:
    properties:
      correlation_id:
        example: "123123"
        type: string
      exchange:
        example: cart
        type: string
      message:
        $ref: '#/definitions/emit.ArticleValidationData'
      routing_key:
        example: ""
        type: string
    type: object
  errs.ValidationErr:
    properties:
      messages:
        items:
          $ref: '#/definitions/errs.errField'
        type: array
    type: object
  errs.errField:
    properties:
      message:
        type: string
      path:
        type: string
    type: object
  rest.AddArticleData:
    properties:
      articleId:
        maxLength: 100
        minLength: 1
        type: string
      quantity:
        maximum: 100
        minimum: 1
        type: integer
    required:
    - articleId
    - quantity
    type: object
  server.ErrorData:
    properties:
      error:
        type: string
    type: object
host: localhost:3003
info:
  contact:
    email: nmarsollier@gmail.com
    name: Nestor Marsollier
  description: Microservicio de Carrito.
  title: CartGo
  version: "1.0"
paths:
  /rabbit/article_exist:
    get:
      consumes:
      - application/json
      description: Luego de solicitar validaciones de catalogo, Escucha article_exist/cart_article_exist.
      parameters:
      - description: Mensaje
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/consume.consumeArticleExistMessage'
      produces:
      - application/json
      responses: {}
      summary: Mensage Rabbit article_exist/cart_article_exist
      tags:
      - Rabbit
    put:
      consumes:
      - application/json
      description: Solicitamos las validaciones ar articulos a catalogo. Responde
        en article_exist/cart_article_exist.
      parameters:
      - description: Mensage de validacion article_exist/cart_article_exist
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/emit.SendValidationMessage'
      produces:
      - application/json
      responses: {}
      summary: Emite Validar Art√≠culos a Cart article_exist/article_exist
      tags:
      - Rabbit
  /rabbit/logout:
    get:
      consumes:
      - application/json
      description: Escucha de mensajes logout desde auth.
      parameters:
      - description: Estructura general del mensage
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/consume.logoutMessage'
      produces:
      - application/json
      responses: {}
      summary: Mensage Rabbit logout
      tags:
      - Rabbit
  /rabbit/order_placed:
    get:
      consumes:
      - application/json
      description: Cuando se recibe order_placed se actualiza el order id del carrito.
        No se respode a este evento.
      parameters:
      - description: Message order_placed
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/consume.consumeOrderPlacedMessage'
      produces:
      - application/json
      responses: {}
      summary: Mensage Rabbit order_placed/order_placed
      tags:
      - Rabbit
  /rabbit/place_order:
    put:
      consumes:
      - application/json
      description: Cuando se hace checkout enviamos un comando a orders para que inicie
        el proceso de la orden.
      parameters:
      - description: Place order
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/emit.SendPlacedMessage'
      produces:
      - application/json
      responses: {}
      summary: Emite place_order/place_order
      tags:
      - Rabbit
  /v1/cart:
    get:
      consumes:
      - application/json
      description: Obtiene el carrito actual.
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cart
          schema:
            $ref: '#/definitions/cart.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorData'
      summary: Obtener carrito.
      tags:
      - Cart
  /v1/cart/article:
    post:
      consumes:
      - application/json
      description: Agrega un articulo del carrito actual.
      parameters:
      - description: ID de articlo
        in: path
        name: articleId
        required: true
        type: string
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Articulo a Agregar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/rest.AddArticleData'
      produces:
      - application/json
      responses:
        "200":
          description: Cart
          schema:
            $ref: '#/definitions/cart.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorData'
      summary: Agregar Articulo
      tags:
      - Cart
  /v1/cart/article/:articleId:
    delete:
      consumes:
      - application/json
      description: Elimina un articulo del carrito actual.
      parameters:
      - description: ID de articlo
        in: path
        name: articleId
        required: true
        type: string
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorData'
      summary: Eliminar Articulo
      tags:
      - Cart
  /v1/cart/article/:articleId/decrement:
    post:
      consumes:
      - application/json
      description: Eliminar 1 al articulo actual.
      parameters:
      - description: ID de articlo
        in: path
        name: articleId
        required: true
        type: string
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cart
          schema:
            $ref: '#/definitions/cart.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorData'
      summary: Agregar 1 Articulo
      tags:
      - Cart
  /v1/cart/article/:articleId/increment:
    post:
      consumes:
      - application/json
      description: Agregar 1 al articulo actual.
      parameters:
      - description: ID de articlo
        in: path
        name: articleId
        required: true
        type: string
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cart
          schema:
            $ref: '#/definitions/cart.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorData'
      summary: Agregar 1 Articulo
      tags:
      - Cart
  /v1/cart/checkouts:
    post:
      consumes:
      - application/json
      description: Hace checkout del carrito actual
      parameters:
      - description: ID de articlo
        in: path
        name: articleId
        required: true
        type: string
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorData'
      summary: Checkout Articulo
      tags:
      - Cart
  /v1/cart/validate:
    get:
      consumes:
      - application/json
      description: Valida el carrito para checkout
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errs.ValidationErr'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/server.ErrorData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/server.ErrorData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.ErrorData'
      summary: Validar Carrito
      tags:
      - Cart
swagger: "2.0"
